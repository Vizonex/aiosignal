if: >  # Forbid running non-PR pushes from pyup bot
  not (type != pull_request AND branch =~ ^pyup\-scheduled\-update\-)

dist: xenial

language: python

python:
- 3.5
- 3.6
- &mainstream_python 3.7
- 3.8-dev
- pypy3

install:
- pip install --upgrade pip wheel setuptools
- pip install -r requirements/ci.txt

script:
- make cov-ci-run

after_success:
 - codecov

_helpers:
  # anchor nodes to be included elsewhere.
- &mainstream_python_base
  python: *mainstream_python

- &lint_base
  <<: *mainstream_python_base
  env: []
  before_install: skip
  install: skip
  before_script: skip
  script: skip
  stage: &doc_stage_name docs, linting and pre-test checks

deploy:
  provider: pypi
  username: __token__
  password:
    # Encrypted with `travis encrypt`:
    secure: "GKdaAN07H4j7EHc9fdUpKkt/mMGfRH3jKoOLFF7bWk72amwg3F0KLdPabLa8991JFDo3sy/fN7EjBXVAnSXbCQ1ExYdM0V8wXj7GwrtdXVTBOHwPeFg/2NaOBgveNEbCxJKPAGm0h+EYIPz22s4mIheJQWdiQxk9keT5CsEsO6YdkWY0WjB1KC+mtk8M4pXtbDFuCQlR/irpp8OOobK7BOuvk6qV7H2zf+MsatS5mX1c+tWqacnU4lrCLrJZ7+StlMZtRLYVpnIEcH0OMDpQOvdPsqK6zMyuSWN6Fzp5ymusxQDdHuOs4VEDe2vYzjYE4XfRfEVGGNIbIoj2yEUr8P8URTjAH5eYd87Eslz0doL3CCHvbpKhwB2dB4SSUwUvdPYsjIKHM1wNJEZ7PpsY9zV18n7z8fdNm3pa0czXhfKr13SOqiGnevtbEibzKV4zT23nyQphxV2LxxI/MmPffKfaHhDD2Fp9hc7kb/rKL9fHUA9gYN008FzMaIEN0H4kbV3omC2CfEehUAMWwD5ndWVEcR7fye3d36vN7/g7uwyJa+NN8jIJU9gp1WFRuvFSARkJ0CzDbdKgbeliQ5AG2lDHGl22BAG/dVhosVw4DHG4IgPtgdkcR+34SUsZb+mHqRVozQNOZp6xlIhNP9HxZr2OQQGQY09lM/k5SojxCyg="
  distributions: "sdist bdist_wheel"
  skip_existing: true
  on:
    <<: *mainstream_python_base
    tags: true
    all_branches: true

os: linux

matrix:
  fast_finish: true
  allow_failures:
  - python: 3.8-dev

  - <<: *lint_base
    name: Checking docs spelling
    before_script:
    - pip install --upgrade -r requirements/doc-spelling.txt
    script:
    - make doc-spelling
    after_failure: cat docs/_build/spelling/output.txt
    addons:
      apt:
        packages:
        - libenchant-dev

  - <<: *lint_base
    name: Checking Towncrier fragments
    before_script:
    - pip install --upgrade -r requirements/towncrier.txt
    script:
    - towncrier --yes

  - <<: *lint_base
    name: Linting source code with flake8
    before_script:
    - pip install --upgrade -r requirements/flake.txt
    script:
    - flake8 aiosignal tests

  - <<: *lint_base
    name: Linting source code with mypy
    script:
    - mypy aiosignal

  - <<: *lint_base
    name: Verifying distribution package metadata
    script:
    - python setup.py --verbose sdist bdist_wheel
    - twine check dist/*

  - <<: *lint_base
    name: Making sure that CONTRIBUTORS.txt remains sorted
    language: shell
    install: skip
    script:
    - LC_ALL=C sort -c CONTRIBUTORS.txt

stages:
- *doc_stage_name
- test
- deploy

cache: pip

before_cache:
- rm -f $HOME/.cache/pip/log/debug.log
