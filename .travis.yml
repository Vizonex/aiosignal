if: >  # Forbid running non-PR pushes from pyup bot
  not (type != pull_request AND branch =~ ^pyup\-scheduled\-update\-)

dist: xenial

language: python

python:
- 3.5
- 3.6
- &mainstream_python 3.7
- 3.8-dev
- pypy3

install:
- pip install --upgrade pip wheel setuptools
- pip install -r requirements/ci.txt

script:
- make cov-ci-run

after_success:
 - codecov

_helpers:
  # anchor nodes to be included elsewhere.
- &mainstream_python_base
  python: *mainstream_python

- &lint_base
  <<: *mainstream_python_base
  env: []
  before_install: skip
  install: skip
  before_script: skip
  script: skip
  stage: &doc_stage_name docs, linting and pre-test checks

deploy:
  provider: pypi
  username: __token__
  password:
    # Encrypted with `travis encrypt`:
    secure: "QnfCQAFZoNXlrNe2UVeI24DTbWu5bzlNdqypXFvey/ga9H2ba9KnWIGFws+1uTux3E9fbfxcNTzO3iLXHc7VEjsif7xvuyIu/NBfV+4ONHGeR7UuwB4iu9PU6cMeD422vYceFZBB7KMfwJZ+mLJWQTKIf74iWK8mIx4IUK8S9As5Ypx6yQdatJr4jgQ/j/1MI4xnmKKIkIJZ18k5epF7N0ifEdZC7TfCuGXF5AMVwxHjUWPzxfkOtC+ENJ8NivZQOCNj/DIeH2nJSVexQrYo+xIO7D40k/hy2lzWqqSTgqE978055UzBQNZmdarzxb8frln5OvvVMIVr8xKZVszglA17fbpuQjMz3ThiDuhozo/dRTNeN+n9r33tm3fRjrzqEcr0mTHzHs7wypmZoXLJplnIko6T3SvnF+O8nhdlIJjArPVJE00kkTj6bz3cKlWYi5OyaFWPo5zLuAvjtPpbUlg/pyus9xsic630JdYQv2IZOrHFkw9OGD/FKy1K1hZ1YIA+XC8cD0s8K+C+NPnCeJ7/yAPwzrMv4XoPhqO5V4D8eJP7FIecbvHxQj0V+tF15OtjqxyuY2+G+NQ6ySn/OFOLrkvCOzselCc4qiEGSzKLlS0BdqLSryekFVUIVr8cng43PHq9bMbXWw9OV0WDs+no0bwGNRJd+FsKzk/4AiE="  distributions: "sdist bdist_wheel"
  skip_existing: true
  on:
    <<: *mainstream_python_base
    tags: true
    all_branches: true

os: linux

matrix:
  fast_finish: true
  allow_failures:
  - python: 3.8-dev

  - <<: *lint_base
    name: Checking docs spelling
    before_script:
    - pip install --upgrade -r requirements/doc-spelling.txt
    script:
    - make doc-spelling
    after_failure: cat docs/_build/spelling/output.txt
    addons:
      apt:
        packages:
        - libenchant-dev

  - <<: *lint_base
    name: Checking Towncrier fragments
    before_script:
    - pip install --upgrade -r requirements/towncrier.txt
    script:
    - towncrier --yes

  - <<: *lint_base
    name: Linting source code with flake8
    before_script:
    - pip install --upgrade -r requirements/flake.txt
    script:
    - flake8 aiosignal tests

  - <<: *lint_base
    name: Linting source code with mypy
    script:
    - mypy aiosignal

  - <<: *lint_base
    name: Verifying distribution package metadata
    script:
    - python setup.py --verbose sdist bdist_wheel
    - twine check dist/*

  - <<: *lint_base
    name: Making sure that CONTRIBUTORS.txt remains sorted
    language: shell
    install: skip
    script:
    - LC_ALL=C sort -c CONTRIBUTORS.txt

stages:
- *doc_stage_name
- test
- deploy

cache: pip

before_cache:
- rm -f $HOME/.cache/pip/log/debug.log
